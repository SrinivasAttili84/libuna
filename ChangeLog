TODO

* implement error
 - error backtrace function
 - error to errno function
 - error print function
 - move notify to ucatools

* what happens when exporting UTF16LE as UTF16BE to UTF16LE with the BOM

* unaexport implement signal handling

* speed test between index based and pointer based iteration

* handle combining characters in windows 1255 and 1258 ?
* add more code pages?

* change libuna_codepage_ macros into inline functions

* copy from/to functions should set/return amount of bytes successfully processed?
  most of the time not needed because the size of the string was already
  determined

Tools:
* unaexport
  - add conversion summary (converting from x to y with codepage z) +/-
  - update man page
  - allow for different input and output codepage?
  - implement basic globbing support for Windows?
  - determine total source file size for process status
  - add option to set buffer size?
  - check if input file is output file?
* unainfo
  tool to determine the encoding type using the byte order mark
  perhaps some other tricks
  useful for automated conversion
  - write man page
  - update unaexport manpage 
    .Sh SEE ALSO
    .Xr unainfo 1
  - update spec.in file
  - update msvscpp project files

Deployment:
* create debian package files
* fix AUTHORS
* update MSVSCPP solution file
  - add unaprocess_status to unaexport project
* update MacOS-X project file

Other Windows codepages (SBC)
* 874 (Thai)
Other Windows codepages (MBC)
* 932 (Japanese Shift-JIS)
* 936 (Simplified Chinese GBK)
* 949 (Korean)
* 950 (Traditional Chinese Big5)

20080909
* libuna already exists renamed to libuca
* Worked on improved error handling
* Worked on rewriting size functions

20080908
* Worked on initial version
* Moved wide character specific code to ucatools no longer used in libuca
* Fixed ucabyte_size for conversion error in 2 digit after separator
* Separated common code in to common code for tools and both libary and tools
* Worked on improved error handling
* Worked on rewriting size functions

20080904
* Worked on initial version
* Added fixed dimension to arrays in codepages header files
* Fixed issue with small UTF streams
* Fixed multiple issues in UTF-8 stream handling
* implemented process_status in ucaexport
* implemented that command line argument option can be written with - and _
* Fixed continue on error issue

20080903
* Worked on initial version
* Worked on strict mode
* Worked on uTF-8 stream functions
* Worked on MacOS-X package files

20080902
* Worked on initial version
* Worked on ucaexport summary
* Worked on UTF-16 stream functions
* Worked on UTF-32 stream functions
* Refactored to use separate UTF-8/16/32 copy_byte_order_mark functions
* Worked on uTF-8 stream functions
* Worked on byte stream size/copy from functions

20080901
* Worked on initial version
* Integrated local use of libuca using HAVE_LOCAL_LIBUNA for maintenance
* implemented UTF-8/16 to/from UTF-32_stream functions
* detection of endian defaults to big if no endianess could be determined
* added detection of UTF-8 byte order mark
* Worked on refactoring _streams to separate files change copy_to_ functions into copy_from
* Implemented libuca_utf16_string_size_from_utf8, libuca_utf32_string_size_from_utf8
* Implemented libuca_utf16_string_size_from_utf32, libuca_utf32_string_size_from_utf32
* Worked on codepages

20080831
* Worked on initial version
* Worked on codepages

20080830
* Worked on initial version
* Worked on stand alone library
* Renamed ascii to sbc (single byte character)
* Worked on codepages

20080829
* Worked on initial version
* Worked on support for converting SBC stream into UTF
* Change code into stand alone ibrary

20080828
* Worked on initial version
* Worked on support for converting SBC stream into UTF

20080827
* Worked on initial version
* Worked on support for converting SBC stream into UTF

20080826
* Worked on initial version
* Worked on Unicode conversion routines

20080825
* Worked on initial version
* Worked on Unicode conversion routines
* Added maximum allowed UTF 0x110000 in strict mode
* Worked on support for converting SBC stream into UTF

20080824
* Worked on initial version
* Worked on Unicode conversion routines

20080823
* Worked on initial version
* Worked on Unicode conversion routines

