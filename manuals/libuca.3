.Dd September 3, 2008
.Dt libuca 3
.Os libuca
.Sh NAME
.Nm libuca.h
.Nd Library to support Unicode and ASCII (byte stream) conversions
.Sh LIBRARY
.Lb libuca
.Sh SYNOPSIS
.In libuca.h
.Pp
.Ft void
.Fn libuca_set_notify_values "FILE *stream, uint8_t verbose"
.Pp
Unicode character functions
.Ft inline int
.Fn libuca_unicode_character_copy_from_byte_stream "libuca_unicode_character_t *unicode_character, uint8_t *byte_stream, size_t byte_stream_size, size_t *byte_stream_index, int codepage"
.Ft inline int
.Fn libuca_unicode_character_copy_to_byte_stream "libuca_unicode_character_t unicode_character, uint8_t *byte_stream, size_t byte_stream_size, size_t *byte_stream_index, int codepage"
.Ft inline int
.Fn libuca_unicode_character_copy_from_utf8 "libuca_unicode_character_t *unicode_character, libuca_utf8_character_t *utf8_string, size_t utf8_string_size, size_t *utf8_string_index"
.Ft inline int
.Fn libuca_unicode_character_copy_to_utf8 "libuca_unicode_character_t unicode_character, libuca_utf8_character_t *utf8_string, size_t utf8_string_size, size_t *utf8_string_index"
.Ft inline int
.Fn libuca_unicode_character_copy_from_utf16 "libuca_unicode_character_t *unicode_character, libuca_utf16_character_t *utf16_string, size_t utf16_string_size, size_t *utf16_string_index"
.Ft inline int
.Fn libuca_unicode_character_copy_to_utf16 "libuca_unicode_character_t unicode_character, libuca_utf16_character_t *utf16_string, size_t utf16_string_size, size_t *utf16_string_index"
.Ft inline int
.Fn libuca_unicode_character_copy_from_utf16_stream "libuca_unicode_character_t *unicode_character, uint8_t *utf16_stream, size_t utf16_stream_size, size_t *utf16_stream_index, uint8_t byte_order"
.Ft inline int
.Fn libuca_unicode_character_copy_to_utf16_stream "libuca_unicode_character_t unicode_character, uint8_t *utf16_stream, size_t utf16_stream_size, size_t *utf16_stream_index, uint8_t byte_order"
.Ft inline int
.Fn libuca_unicode_character_copy_from_utf32 "libuca_unicode_character_t *unicode_character, libuca_utf32_character_t *utf32_string, size_t utf32_string_size, size_t *utf32_string_index"
.Ft inline int
.Fn libuca_unicode_character_copy_to_utf32 "libuca_unicode_character_t unicode_character, libuca_utf32_character_t *utf32_string, size_t utf32_string_size, size_t *utf32_string_index"
.Ft inline int
.Fn libuca_unicode_character_copy_from_utf32_stream "libuca_unicode_character_t *unicode_character, uint8_t *utf32_stream, size_t utf32_stream_size, size_t *utf32_stream_index, uint8_t byte_order"
.Ft inline int
.Fn libuca_unicode_character_copy_to_utf32_stream "libuca_unicode_character_t unicode_character, uint8_t *utf32_stream, size_t utf32_stream_size, size_t *utf32_stream_index, uint8_t byte_order"
.Pp
Byte stream functions
.Ft ssize_t
.Fn libuca_byte_stream_size_from_utf8 "libuca_utf8_character_t *utf8_string, size_t utf8_string_size, int codepage"
.Ft int
.Fn libuca_byte_stream_copy_from_utf8 "uint8_t *byte_stream, size_t byte_stream_size, int codepage, libuca_utf8_character_t *utf8_string, size_t utf8_string_size"
.Ft ssize_t
.Fn libuca_byte_stream_size_from_utf16 "libuca_utf16_character_t *utf16_string, size_t utf16_string_size, int codepage"
.Ft int
.Fn libuca_byte_stream_copy_from_utf16 "uint8_t *byte_stream, size_t byte_stream_size, int codepage, libuca_utf16_character_t *utf16_string, size_t utf16_string_size"
.Ft ssize_t
.Fn libuca_byte_stream_size_from_utf32 "libuca_utf32_character_t *utf32_string, size_t utf32_string_size, int codepage"
.Ft int
.Fn libuca_byte_stream_copy_from_utf32 "uint8_t *byte_stream, size_t byte_stream_size, int codepage, libuca_utf32_character_t *utf32_string, size_t utf32_string_size"
.Pp
UTF-8 stream functions
.Ft inline int
.Fn libuca_utf8_stream_copy_byte_order_mark "uint8_t *utf8_stream, size_t utf8_stream_size, size_t *utf8_stream_index"
.Ft ssize_t
.Fn libuca_utf8_stream_size_from_utf8 "libuca_utf8_character_t *utf8_string, size_t utf8_string_size"
.Ft int
.Fn libuca_utf8_stream_copy_from_utf8 "uint8_t *utf8_stream, size_t utf8_stream_size, libuca_utf8_character_t *utf8_string, size_t utf8_string_size"
.Ft ssize_t
.Fn libuca_utf8_stream_size_from_utf16 "libuca_utf16_character_t *utf16_string, size_t utf16_string_size"
.Ft int
.Fn libuca_utf8_stream_copy_from_utf16 "uint8_t *utf8_stream, size_t utf8_stream_size, libuca_utf16_character_t *utf16_string, size_t utf16_string_size"
.Ft ssize_t
.Fn libuca_utf8_stream_size_from_utf32 "libuca_utf32_character_t *utf32_string, size_t utf32_string_size"
.Ft int
.Fn libuca_utf8_stream_copy_from_utf32 "uint8_t *utf8_stream, size_t utf8_stream_size, libuca_utf32_character_t *utf32_string, size_t utf32_string_size"
.Pp
UTF-8 string functions
.Ft ssize_t
.Fn libuca_utf8_string_size_from_byte_stream "uint8_t *byte_stream, size_t byte_stream_size, int codepage"
.Ft int
.Fn libuca_utf8_string_copy_from_byte_stream "libuca_utf8_character_t *utf8_string, size_t utf8_string_size, uint8_t *byte_stream, size_t byte_stream_size, int codepage"
.Ft ssize_t
.Fn libuca_utf8_string_size_from_utf16 "libuca_utf16_character_t *utf16_string, size_t utf16_string_size"
.Ft int
.Fn libuca_utf8_string_copy_from_utf16 "libuca_utf8_character_t *utf8_string, size_t utf8_string_size, libuca_utf16_character_t *utf16_string, size_t utf16_string_size"
.Ft ssize_t
.Fn libuca_utf8_string_size_from_utf16_stream "uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order"
.Ft int
.Fn libuca_utf8_string_copy_from_utf16_stream "libuca_utf8_character_t *utf8_string, size_t utf8_string_size, uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order"
.Ft ssize_t
.Fn libuca_utf8_string_size_from_utf32 "libuca_utf32_character_t *utf32_string, size_t utf32_string_size"
.Ft int
.Fn libuca_utf8_string_copy_from_utf32 "libuca_utf8_character_t *utf8_string, size_t utf8_string_size, libuca_utf32_character_t *utf32_string, size_t utf32_string_size"
.Ft ssize_t
.Fn libuca_utf8_string_size_from_utf32_stream "uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order"
.Ft int
.Fn libuca_utf8_string_copy_from_utf32_stream "libuca_utf8_character_t *utf8_string, size_t utf8_string_size, uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order"
.Pp
UTF-16 stream functions
.Ft inline int
.Fn libuca_utf16_stream_copy_byte_order_mark "uint8_t *utf16_stream, size_t utf16_stream_size, size_t *utf16_stream_index, uint8_t byte_order"
.Ft ssize_t
.Fn libuca_utf16_stream_size_from_utf8 "libuca_utf8_character_t *utf8_string, size_t utf8_string_size"
.Ft int
.Fn libuca_utf16_stream_copy_from_utf8 "uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order, libuca_utf8_character_t *utf8_string, size_t utf8_string_size"
.Ft ssize_t
.Fn libuca_utf16_stream_size_from_utf16 "libuca_utf16_character_t *utf16_string, size_t utf16_string_size"
.Ft int
.Fn libuca_utf16_stream_copy_from_utf16 "uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order, libuca_utf16_character_t *utf16_string, size_t utf16_string_size"
.Ft ssize_t
.Fn libuca_utf16_stream_size_from_utf32 "libuca_utf32_character_t *utf32_string, size_t utf32_string_size"
.Ft int
.Fn libuca_utf16_stream_copy_from_utf32 "uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order, libuca_utf32_character_t *utf32_string, size_t utf32_string_size"
.Pp
UTF-16 string functions
.Ft ssize_t
.Fn libuca_utf16_string_size_from_byte_stream "uint8_t *byte_stream, size_t byte_stream_size, int codepage"
.Ft int
.Fn libuca_utf16_string_copy_from_byte_stream "libuca_utf16_character_t *utf16_string, size_t utf16_string_size, uint8_t *byte_stream, size_t byte_stream_size, int codepage"
.Ft ssize_t
.Fn libuca_utf16_string_size_from_utf8 "libuca_utf8_character_t *utf8_string, size_t utf8_string_size"
.Ft int
.Fn libuca_utf16_string_copy_from_utf8 "libuca_utf16_character_t *utf16_string, size_t utf16_string_size, libuca_utf8_character_t *utf8_string, size_t utf8_string_size"
.Ft ssize_t
.Fn libuca_utf16_string_size_from_utf16_stream "uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order"
.Ft int
.Fn libuca_utf16_string_copy_from_utf16_stream "libuca_utf16_character_t *utf16_string, size_t utf16_string_size, uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order"
.Ft ssize_t
.Fn libuca_utf16_string_size_from_utf32 "libuca_utf32_character_t *utf32_string, size_t utf32_string_size"
.Ft int
.Fn libuca_utf16_string_copy_from_utf32 "libuca_utf16_character_t *utf16_string, size_t utf16_string_size, libuca_utf32_character_t *utf32_string, size_t utf32_string_size"
.Ft ssize_t
.Fn libuca_utf16_string_size_from_utf32_stream "uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order"
.Ft int
.Fn libuca_utf16_string_copy_from_utf32_stream "libuca_utf16_character_t *utf16_string, size_t utf16_string_size, uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order"
.Pp
UTF-32 stream functions
.Ft inline int
.Fn libuca_utf32_stream_copy_byte_order_mark "uint8_t *utf32_stream, size_t utf32_stream_size, size_t *utf32_stream_index, uint8_t byte_order"
.Ft ssize_t
.Fn libuca_utf32_stream_size_from_utf8 "libuca_utf8_character_t *utf8_string, size_t utf8_string_size"
.Ft int
.Fn libuca_utf32_stream_copy_from_utf8 "uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order, libuca_utf8_character_t *utf8_string, size_t utf8_string_size"
.Ft ssize_t
.Fn libuca_utf32_stream_size_from_utf16 "libuca_utf16_character_t *utf16_string, size_t utf16_string_size"
.Ft int
.Fn libuca_utf32_stream_copy_from_utf16 "uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order, libuca_utf16_character_t *utf16_string, size_t utf16_string_size"
.Ft ssize_t
.Fn libuca_utf32_stream_size_from_utf32 "libuca_utf32_character_t *utf32_string, size_t utf32_string_size"
.Ft int
.Fn libuca_utf32_stream_copy_from_utf32 "uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order, libuca_utf32_character_t *utf32_string, size_t utf32_string_size"
.Pp
UTF-32 string functions
.Ft ssize_t
.Fn libuca_utf32_string_size_from_byte_stream "uint8_t *byte_stream, size_t byte_stream_size, int codepage"
.Ft int
.Fn libuca_utf32_string_copy_from_byte_stream "libuca_utf32_character_t *utf32_string, size_t utf32_string_size, uint8_t *byte_stream, size_t byte_stream_size, int codepage"
.Ft ssize_t
.Fn libuca_utf32_string_size_from_utf8 "libuca_utf8_character_t *utf8_string, size_t utf8_string_size"
.Ft int
.Fn libuca_utf32_string_copy_from_utf8 "libuca_utf32_character_t *utf32_string, size_t utf32_string_size, libuca_utf8_character_t *utf8_string, size_t utf8_string_size"
.Ft ssize_t
.Fn libuca_utf32_string_size_from_utf16 "libuca_utf16_character_t *utf16_string, size_t utf16_string_size"
.Ft int
.Fn libuca_utf32_string_copy_from_utf16 "libuca_utf32_character_t *utf32_string, size_t utf32_string_size, libuca_utf16_character_t *utf16_string, size_t utf16_string_size"
.Ft ssize_t
.Fn libuca_utf32_string_size_from_utf16_stream "uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order"
.Ft int
.Fn libuca_utf32_string_copy_from_utf16_stream "libuca_utf32_character_t *utf32_string, size_t utf32_string_size, uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order"
.Ft ssize_t
.Fn libuca_utf32_string_size_from_utf32_stream "uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order"
.Ft int
.Fn libuca_utf32_string_copy_from_utf32_stream "libuca_utf32_character_t *utf32_string, size_t utf32_string_size, uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order"
.Pp
When the library was compiled with narrow character support (default) the following functions are available
.Ft const char *
.Fn libuca_get_version "void"
.Pp
When the library was compiled with wide character support the following functions are available instead of the narrow character functions
.Ft const wchar_t *
.Fn libuca_get_version "void"
.Sh DESCRIPTION
The
.Fn libuca_get_version
function is used to retrieve the library version.
.Sh RETURN VALUES
Most of the functions return NULL or -1 on error, dependent on the return type. For the actual return values refer to libuca.h
.Sh ENVIRONMENT
None
.Sh FILES
None
.Sh BUGS
Please report bugs of any kind to <forensics@hoffmannbv.nl> or on the project website:
http://libuca.sourceforge.net
.Sh AUTHOR
These man pages were written by Joachim Metz.
.Sh COPYRIGHT
Copyright 2008 Joachim Metz, Hoffmann Investigations <forensics@hoffmannbv.nl> and contributors.
This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Sh SEE ALSO
the libuca.h include file
