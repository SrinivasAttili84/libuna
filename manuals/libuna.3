.Dd December 4, 2009
.Dt libuna 3
.Os libuna
.Sh NAME
.Nm libuna.h
.Nd Library to support Unicode and ASCII (byte stream) conversions
.Sh LIBRARY
.Lb libuna
.Sh SYNOPSIS
.In libuna.h
.Pp
.Ft const char *
.Fn libuna_get_version "void"
.Pp
Unicode character functions
.Ft int
.Fn libuna_unicode_character_copy_from_byte_stream "libuna_unicode_character_t *unicode_character, const uint8_t *byte_stream, size_t byte_stream_size, size_t *byte_stream_index, int codepage, libuna_error_t **error"
.Ft int
.Fn libuna_unicode_character_copy_to_byte_stream "libuna_unicode_character_t unicode_character, uint8_t *byte_stream, size_t byte_stream_size, size_t *byte_stream_index, int codepage, libuna_error_t **error"
.Ft int
.Fn libuna_unicode_character_copy_from_utf7 "libuna_unicode_character_t *unicode_character, const libuna_utf7_character_t *utf7_string, size_t utf7_string_size, size_t *utf7_string_index, uint32_t *utf7_base64_data, libuna_error_t **error"
.Ft int
.Fn libuna_unicode_character_copy_to_utf7 "libuna_unicode_character_t unicode_character, libuna_utf7_character_t *utf7_string, size_t utf7_string_size, size_t *utf7_string_index, uint32_t *utf7_base64_data, libuna_error_t **error"
.Ft int
.Fn libuna_unicode_character_copy_from_utf8 "libuna_unicode_character_t *unicode_character, const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, size_t *utf8_string_index, libuna_error_t **error"
.Ft int
.Fn libuna_unicode_character_copy_to_utf8 "libuna_unicode_character_t unicode_character, libuna_utf8_character_t *utf8_string, size_t utf8_string_size, size_t *utf8_string_index, libuna_error_t **error"
.Ft int
.Fn libuna_unicode_character_copy_from_utf16 "libuna_unicode_character_t *unicode_character, const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, size_t *utf16_string_index, libuna_error_t **error"
.Ft int
.Fn libuna_unicode_character_copy_to_utf16 "libuna_unicode_character_t unicode_character, libuna_utf16_character_t *utf16_string, size_t utf16_string_size, size_t *utf16_string_index, libuna_error_t **error"
.Ft int
.Fn libuna_unicode_character_copy_from_utf16_stream "libuna_unicode_character_t *unicode_character, const uint8_t *utf16_stream, size_t utf16_stream_size, size_t *utf16_stream_index, uint8_t byte_order, libuna_error_t **error"
.Ft int
.Fn libuna_unicode_character_copy_to_utf16_stream "libuna_unicode_character_t unicode_character, uint8_t *utf16_stream, size_t utf16_stream_size, size_t *utf16_stream_index, uint8_t byte_order, libuna_error_t **error"
.Ft int
.Fn libuna_unicode_character_copy_from_utf32 "libuna_unicode_character_t *unicode_character, const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, size_t *utf32_string_index, libuna_error_t **error"
.Ft int
.Fn libuna_unicode_character_copy_to_utf32 "libuna_unicode_character_t unicode_character, libuna_utf32_character_t *utf32_string, size_t utf32_string_size, size_t *utf32_string_index, libuna_error_t **error"
.Ft int
.Fn libuna_unicode_character_copy_from_utf32_stream "libuna_unicode_character_t *unicode_character, const uint8_t *utf32_stream, size_t utf32_stream_size, size_t *utf32_stream_index, uint8_t byte_order, libuna_error_t **error"
.Ft int
.Fn libuna_unicode_character_copy_to_utf32_stream "libuna_unicode_character_t unicode_character, uint8_t *utf32_stream, size_t utf32_stream_size, size_t *utf32_stream_index, uint8_t byte_order, libuna_error_t **error"
.Pp
Byte stream functions
.Ft int
.Fn libuna_byte_stream_size_from_utf8 "const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, int codepage, size_t *byte_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_byte_stream_copy_from_utf8 "uint8_t *byte_stream, size_t byte_stream_size, int codepage, const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_byte_stream_size_from_utf16 "const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, int codepage, size_t *byte_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_byte_stream_copy_from_utf16 "uint8_t *byte_stream, size_t byte_stream_size, int codepage, const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_byte_stream_size_from_utf32 "const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, int codepage, size_t *byte_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_byte_stream_copy_from_utf32 "uint8_t *byte_stream, size_t byte_stream_size, int codepage, const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, libuna_error_t **error"
.Pp
UTF-8 stream functions
.Ft int
.Fn libuna_utf8_stream_copy_byte_order_mark "uint8_t *utf8_stream, size_t utf8_stream_size, size_t *utf8_stream_index, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_stream_size_from_utf8 "const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, size_t *utf8_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_stream_copy_from_utf8 "uint8_t *utf8_stream, size_t utf8_stream_size, const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_stream_size_from_utf16 "const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, size_t *utf8_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_stream_copy_from_utf16 "uint8_t *utf8_stream, size_t utf8_stream_size, const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_stream_size_from_utf32 "const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, size_t *utf8_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_stream_copy_from_utf32 "uint8_t *utf8_stream, size_t utf8_stream_size, const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, libuna_error_t **error"
.Pp
UTF-8 string functions
.Ft int
.Fn libuna_utf8_string_size_from_byte_stream "const uint8_t *byte_stream, size_t byte_stream_size, int codepage, size_t *utf8_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_copy_from_byte_stream "libuna_utf8_character_t *utf8_string, size_t utf8_string_size, const uint8_t *byte_stream, size_t byte_stream_size, int codepage, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_compare_with_byte_stream "const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, const uint8_t *byte_stream, size_t byte_stream_size, int codepage, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_size_from_utf8_stream "const uint8_t *utf8_stream, size_t utf8_stream_size, size_t *utf8_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_copy_from_utf8_stream "libuna_utf8_character_t *utf8_string, size_t utf8_string_size, const uint8_t *utf8_stream, size_t utf8_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_compare_with_utf8_stream "const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, const uint8_t *utf8_stream, size_t utf8_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_size_from_utf16 "const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, size_t *utf8_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_copy_from_utf16 "libuna_utf8_character_t *utf8_string, size_t utf8_string_size, const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_compare_with_utf16 "const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_size_from_utf16_stream "const uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order, size_t *utf8_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_copy_from_utf16_stream "libuna_utf8_character_t *utf8_string, size_t utf8_string_size, const uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_compare_with_utf16_stream "const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, const uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_size_from_utf32 "const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, size_t *utf8_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_copy_from_utf32 "libuna_utf8_character_t *utf8_string, size_t utf8_string_size, const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_compare_with_utf32 "const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, libuna_error_t **error :
.Ft int
.Fn libuna_utf8_string_size_from_utf32_stream "const uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order, size_t *utf8_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_copy_from_utf32_stream "libuna_utf8_character_t *utf8_string, size_t utf8_string_size, const uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order, libuna_error_t **error"
.Ft int
.Fn libuna_utf8_string_compare_with_utf32_stream "const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, const uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order, libuna_error_t **error :
.Pp
UTF-16 stream functions
.Ft int
.Fn libuna_utf16_stream_copy_byte_order_mark "uint8_t *utf16_stream, size_t utf16_stream_size, size_t *utf16_stream_index, uint8_t byte_order, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_stream_size_from_utf8 "const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, size_t utf16_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_stream_copy_from_utf8 "uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order, const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_stream_size_from_utf16 "const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, size_t utf16_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_stream_copy_from_utf16 "uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order, const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_stream_size_from_utf32 "const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, size_t utf16_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_stream_copy_from_utf32 "uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order, const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, libuna_error_t **error"
.Pp
UTF-16 string functions
.Ft int
.Fn libuna_utf16_string_size_from_byte_stream "const uint8_t *byte_stream, size_t byte_stream_size, int codepage, size_t *utf16_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_copy_from_byte_stream "libuna_utf16_character_t *utf16_string, size_t utf16_string_size, const uint8_t *byte_stream, size_t byte_stream_size, int codepage, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_compare_with_byte_stream "const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, const uint8_t *byte_stream, size_t byte_stream_size, int codepage, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_size_from_utf8 "const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, size_t *utf16_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_copy_from_utf8 "libuna_utf16_character_t *utf16_string, size_t utf16_string_size, const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_size_from_utf8_stream "const uint8_t *utf8_stream, size_t utf8_stream_size, size_t *utf16_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_copy_from_utf8_stream "libuna_utf8_character_t *utf16_string, size_t utf16_string_size, const uint8_t *utf8_stream, size_t utf8_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_compare_with_utf8_stream "const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, const uint8_t *utf8_stream, size_t utf8_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_size_from_utf16_stream "const uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order, size_t *utf16_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_copy_from_utf16_stream "libuna_utf16_character_t *utf16_string, size_t utf16_string_size, const uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_compare_with_utf16_stream "const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, const uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order, libuna_error_t **error :
.Ft int
.Fn libuna_utf16_string_size_from_utf32 "const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, size_t *utf16_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_copy_from_utf32 "libuna_utf16_character_t *utf16_string, size_t utf16_string_size, const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_compare_with_utf32_string "const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_size_from_utf32_stream "const uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order, size_t *utf16_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_copy_from_utf32_stream "libuna_utf16_character_t *utf16_string, size_t utf16_string_size, const uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order, libuna_error_t **error"
.Ft int
.Fn libuna_utf16_string_compare_with_utf32_stream "const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, const uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order, libuna_error_t **error :
.Pp
UTF-32 stream functions
.Ft int
.Fn libuna_utf32_stream_copy_byte_order_mark "uint8_t *utf32_stream, size_t utf32_stream_size, size_t *utf32_stream_index, uint8_t byte_order, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_stream_size_from_utf8 "const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, size_t *utf32_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_stream_copy_from_utf8 "uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order, const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_stream_size_from_utf16 "const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, size_t *utf32_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_stream_copy_from_utf16 "uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order, const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_stream_size_from_utf32 "const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, size_t *utf32_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_stream_copy_from_utf32 "uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order, const libuna_utf32_character_t *utf32_string, size_t utf32_string_size, libuna_error_t **error"
.Pp
UTF-32 string functions
.Ft int
.Fn libuna_utf32_string_size_from_byte_stream "const uint8_t *byte_stream, size_t byte_stream_size, int codepage, size_t *utf32_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_string_copy_from_byte_stream "libuna_utf32_character_t *utf32_string, size_t utf32_string_size, const uint8_t *byte_stream, size_t byte_stream_size, int codepage, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_string_size_from_utf8 "const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, size_t *utf32_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_string_copy_from_utf8 "libuna_utf32_character_t *utf32_string, size_t utf32_string_size, const libuna_utf8_character_t *utf8_string, size_t utf8_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_string_size_from_utf8_stream "const uint8_t *utf8_stream, size_t utf8_stream_size, size_t *utf32_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_string_copy_from_utf8_stream "libuna_utf8_character_t *utf32_string, size_t utf32_string_size, const uint8_t *utf8_stream, size_t utf8_stream_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_string_size_from_utf16 "const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, size_t *utf32_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_string_copy_from_utf16 "libuna_utf32_character_t *utf32_string, size_t utf32_string_size, const libuna_utf16_character_t *utf16_string, size_t utf16_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_string_size_from_utf16_stream "const uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order, size_t *utf32_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_string_copy_from_utf16_stream "libuna_utf32_character_t *utf32_string, size_t utf32_string_size, const uint8_t *utf16_stream, size_t utf16_stream_size, uint8_t byte_order, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_string_size_from_utf32_stream "const uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order, size_t *utf32_string_size, libuna_error_t **error"
.Ft int
.Fn libuna_utf32_string_copy_from_utf32_stream "libuna_utf32_character_t *utf32_string, size_t utf32_string_size, const uint8_t *utf32_stream, size_t utf32_stream_size, uint8_t byte_order, libuna_error_t **error"
.Sh DESCRIPTION
The
.Fn libuna_get_version
function is used to retrieve the library version.
.Sh RETURN VALUES
Most of the functions return NULL or -1 on error, dependent on the return type. For the actual return values refer to libuna.h
.Sh ENVIRONMENT
None
.Sh FILES
None
.Sh BUGS
Please report bugs of any kind to <forensics@hoffmannbv.nl> or on the project website:
http://libuna.sourceforge.net
.Sh AUTHOR
These man pages were written by Joachim Metz.
.Sh COPYRIGHT
Copyright 2008-2009 Joachim Metz, Hoffmann Investigations <forensics@hoffmannbv.nl> and contributors.
This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Sh SEE ALSO
the libuna.h include file
